{"ast":null,"code":"var API_URL = 'http://graphql.unicaen.fr:4000';\nimport fetch from \"node-fetch\";\nvar CREATE_TODOLIST = `\nmutation createTodoLists($input: [TodoListCreateInput!]!) {\n  createTodoLists(input: $input) {\n    todoLists {\n      id\n      owner {\n        username\n      }\n      title\n    }\n  }\n}`;\nexport function createTodoList(username, title, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: CREATE_TODOLIST,\n      variables: {\n        \"input\": [{\n          \"owner\": {\n            \"connect\": {\n              \"where\": {\n                \"username\": username\n              }\n            }\n          },\n          \"title\": title\n        }]\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.createTodoLists.todoLists[0];\n  }).catch(function (error) {\n    console.log('error API', error.message);\n    throw error;\n  });\n}\nvar TODOLISTS = `\nquery TodoLists($where: TodoListWhere) {\n  todoLists(where: $where) {\n    id\n    title\n  }\n}\n`;\nexport function getTodoLists(username, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: TODOLISTS,\n      variables: {\n        \"where\": {\n          \"owner\": {\n            \"username\": username\n          }\n        }\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.todoLists;\n  }).catch(function (error) {\n    console.log('error API', error.message);\n    throw error;\n  });\n}\nvar DELETE_TODOLIST = `\nmutation DeleteTodoLists($where: TodoListWhere) {\n  deleteTodoLists(where: $where) {\n    nodesDeleted\n  }\n}\n`;\nexport function deleteTodoList(id, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: DELETE_TODOLIST,\n      variables: {\n        \"where\": {\n          \"id\": id\n        }\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.deleteTodoLists.nodesDeleted;\n  }).catch(function (error) {\n    console.log('error API', error.message);\n    throw error;\n  });\n}\nvar UPDATE_TODOLIST = `\nmutation UpdateTodoList($id: ID!, $title: String!) {\n  updateTodoLists(where: { id: $id }, update: { title: $title }) {\n    todoLists {\n      id\n      title\n    }\n  }\n}\n`;\nexport function updateTodoList(id, title, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: UPDATE_TODOLIST,\n      variables: {\n        id: id,\n        title: title\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.updateTodoLists.todoLists[0];\n  }).catch(function (error) {\n    console.log('Error API:', error.message);\n    throw error;\n  });\n}","map":{"version":3,"names":["API_URL","fetch","CREATE_TODOLIST","createTodoList","username","title","token","method","headers","body","JSON","stringify","query","variables","then","response","json","jsonResponse","errors","data","createTodoLists","todoLists","catch","error","console","log","message","TODOLISTS","getTodoLists","DELETE_TODOLIST","deleteTodoList","id","deleteTodoLists","nodesDeleted","UPDATE_TODOLIST","updateTodoList","updateTodoLists"],"sources":["/home/rezala231/Documents/sd/ToDoList-application/components/todoList.js"],"sourcesContent":["\nconst API_URL = 'http://graphql.unicaen.fr:4000'\n\nimport fetch from \"node-fetch\"\n\nconst CREATE_TODOLIST = `\nmutation createTodoLists($input: [TodoListCreateInput!]!) {\n  createTodoLists(input: $input) {\n    todoLists {\n      id\n      owner {\n        username\n      }\n      title\n    }\n  }\n}`\n\nexport function createTodoList(username, title, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: CREATE_TODOLIST,\n      variables: {\n        \"input\": [\n          {\n            \"owner\": {\n              \"connect\": {\n                \"where\": {\n                  \"username\": username\n                }\n              }\n            },\n            \"title\": title\n          }\n        ]\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.createTodoLists.todoLists[0]\n    })\n    .catch(error => {\n      console.log('error API', error.message)\n      throw error\n    })\n}\n\nconst TODOLISTS = `\nquery TodoLists($where: TodoListWhere) {\n  todoLists(where: $where) {\n    id\n    title\n  }\n}\n`\nexport function getTodoLists(username, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: TODOLISTS,\n      variables: {\n        \"where\": {\n          \"owner\": {\n            \"username\": username\n          }\n        }\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.todoLists\n    })\n    .catch(error => {\n        console.log('error API', error.message)\n      throw error\n    })\n}\n\nconst DELETE_TODOLIST = `\nmutation DeleteTodoLists($where: TodoListWhere) {\n  deleteTodoLists(where: $where) {\n    nodesDeleted\n  }\n}\n`\n\nexport function deleteTodoList(id, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: DELETE_TODOLIST,\n      variables: {\n        \"where\": {\n          \"id\": id\n        }\n      }\n    })\n  })\n    .then(response => {\n      return response.json()\n    })\n    .then(jsonResponse => {\n      if (jsonResponse.errors != null) {\n        throw jsonResponse.errors[0]\n      }\n      return jsonResponse.data.deleteTodoLists.nodesDeleted\n    })\n    .catch(error => {\n        console.log('error API', error.message)\n      throw error\n    })\n}\nconst UPDATE_TODOLIST = `\nmutation UpdateTodoList($id: ID!, $title: String!) {\n  updateTodoLists(where: { id: $id }, update: { title: $title }) {\n    todoLists {\n      id\n      title\n    }\n  }\n}\n`;\n\nexport function updateTodoList(id, title, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token,\n    },\n    body: JSON.stringify({\n      query: UPDATE_TODOLIST,\n      variables: {\n        id,\n        title,\n      },\n    }),\n  })\n    .then((response) => response.json())\n    .then((jsonResponse) => {\n      if (jsonResponse.errors) {\n        throw jsonResponse.errors[0];\n      }\n      return jsonResponse.data.updateTodoLists.todoLists[0];\n    })\n    .catch((error) => {\n      console.log('Error API:', error.message);\n      throw error;\n    });\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}