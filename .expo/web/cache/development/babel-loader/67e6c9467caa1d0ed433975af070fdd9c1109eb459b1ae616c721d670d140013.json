{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TokenContext, UsernameContext } from \"../Contexte/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar backgroundImage = require(\"../assets/1489353.jpg\");\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(TokenContext),\n    _useContext2 = _slicedToArray(_useContext, 1),\n    token = _useContext2[0];\n  var _useContext3 = useContext(UsernameContext),\n    _useContext4 = _slicedToArray(_useContext3, 1),\n    username = _useContext4[0];\n  return _jsx(ImageBackground, {\n    source: backgroundImage,\n    style: styles.background,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.box,\n        children: token ? _jsxs(_Fragment, {\n          children: [_jsxs(Text, {\n            style: styles.welcomeText,\n            children: [\"Bienvenue, \", _jsx(Text, {\n              style: styles.username,\n              children: username\n            }), \"!\"]\n          }), _jsx(Text, {\n            style: styles.infoText,\n            children: \"J'esp\\xE8re que vous finirez bient\\xF4t votre travail\\u202F!\"\n          })]\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(Text, {\n            style: styles.errorText,\n            children: \" Vous n'\\xEAtes pas connect\\xE9.\"\n          }), _jsx(Text, {\n            style: styles.infoText,\n            children: \"J'esp\\xE8re que vous finirez bient\\xF4t votre travail\\u202F!\"\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  box: {\n    backgroundColor: 'rgba(255, 255, 255, 0.85)',\n    borderRadius: 15,\n    padding: 20,\n    alignItems: 'center',\n    width: '80%'\n  },\n  welcomeText: {\n    fontSize: 24,\n    color: '#333',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginVertical: 10\n  },\n  username: {\n    color: '#000',\n    fontWeight: '900',\n    textTransform: 'capitalize'\n  },\n  errorText: {\n    fontSize: 20,\n    color: '#e74c3c',\n    textAlign: 'center',\n    fontWeight: '600',\n    marginVertical: 10\n  },\n  infoText: {\n    fontSize: 18,\n    color: '#333',\n    textAlign: 'center',\n    marginTop: 20,\n    fontStyle: 'italic'\n  }\n});","map":{"version":3,"names":["React","useContext","Text","View","StyleSheet","ImageBackground","TokenContext","UsernameContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","backgroundImage","require","HomeScreen","_ref","navigation","_useContext","_useContext2","_slicedToArray","token","_useContext3","_useContext4","username","source","style","styles","background","children","container","box","welcomeText","infoText","errorText","create","flex","resizeMode","justifyContent","alignItems","padding","backgroundColor","borderRadius","width","fontSize","color","textAlign","fontWeight","marginVertical","textTransform","marginTop","fontStyle"],"sources":["/home/rezala231/Documents/sd/ToDoList-application/Screen/HomeScreen.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Text, View, StyleSheet, ImageBackground } from 'react-native';\nimport { TokenContext, UsernameContext } from '../Contexte/Context';\n\nconst backgroundImage = require('../assets/1489353.jpg'); // on spécifie le chemin vers l'image\n\nexport default function HomeScreen({ navigation }) {\n  const [token] = useContext(TokenContext);\n  const [username] = useContext(UsernameContext);\n\n  return (\n    <ImageBackground source={backgroundImage} style={styles.background}>\n      <View style={styles.container}>\n        <View style={styles.box}>\n          {token ? (\n            <>\n              <Text style={styles.welcomeText}>\n                 Bienvenue, <Text style={styles.username}>{username}</Text>! \n              </Text>\n              <Text style={styles.infoText}>\n                J'espère que vous finirez bientôt votre travail !\n              </Text>\n            </>\n          ) : (\n            <>\n              <Text style={styles.errorText}> Vous n'êtes pas connecté.</Text>\n              <Text style={styles.infoText}>\n                J'espère que vous finirez bientôt votre travail !\n              </Text>\n            </>\n          )}\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    resizeMode: 'cover',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  box: {\n    backgroundColor: 'rgba(255, 255, 255, 0.85)', \n    borderRadius: 15,\n    padding: 20,\n    alignItems: 'center',\n    width: '80%',\n  },\n  welcomeText: {\n    fontSize: 24,\n    color: '#333', \n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginVertical: 10,\n  },\n  username: {\n    color: '#000', // Texte noir\n    fontWeight: '900',\n    textTransform: 'capitalize',\n  },\n  errorText: {\n    fontSize: 20,\n    color: '#e74c3c',\n    textAlign: 'center',\n    fontWeight: '600',\n    marginVertical: 10,\n  },\n  infoText: {\n    fontSize: 18,\n    color: '#333', \n    textAlign: 'center',\n    marginTop: 20,\n    fontStyle: 'italic',\n  },\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}